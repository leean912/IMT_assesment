name: Build Flutter

# 1
on:
  # 2
  push:
    branches: [ "master" ]
  # pull_request:
  #   branches: [ "master" ]

  # 3
  workflow_dispatch:

# 4
jobs:
  # 5
  build:
    # 6
    runs-on: ubuntu-latest

    # 7
    steps:
      # 8
      - uses: actions/checkout@v3
      # 9
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: 'gradle'
      # 10   
      - uses: subosito/flutter-action@v2
        with:
          # 11
          flutter-version: "3.13.0"
          channel: 'stable'
          cache: true
      # 12
      - name: Get dependencies
        run: flutter pub get

      - name: Analyze
        run: flutter analyze

      - name: Run tests
        run: |
          flutter test --coverage
          echo "Test Hello World"
          COVERAGE=$(awk 'BEGIN {covered=0; total=0} /SF:/{flag=1} flag && /DA:/{total++; if ($NF != 0) covered++} /end_of_record/{flag=0} END {printf "%d\n", (100 * covered) / total}' coverage/lcov.info)
          if [ -z "$COVERAGE" ]; then
            echo "Failed to extract coverage percentage"
            exit 1
          fi
          if [ "$COVERAGE" -lt 90 ]; then
            echo "Coverage is below 90%"
            exit 1
          fi
          # COVERAGE=$(grep -E 'lines\.*:' coverage/lcov.info | awk '{print $2}' | cut -d '.' -f 1)
          # if [ "$COVERAGE" -lt 90 ]; then
          #   echo "Coverage is below 90%"
          #   exit 1
          # fi

      # Runs a set of commands using the runners shell
      - name: Start release build
        run: flutter build appbundle
